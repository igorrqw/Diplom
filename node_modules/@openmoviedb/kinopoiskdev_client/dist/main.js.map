{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AGAA,IAAY;AAAZ,CAAA,SAAY,OAAO;IACjB,OAAA,CAAA,KAAA,GAAA;IACA,OAAA,CAAA,OAAA,GAAA;IACA,OAAA,CAAA,OAAA,GAAA;IACA,OAAA,CAAA,OAAA,GAAA;AACF,CAAA,EALY,6CAAA,CAAA,4CAAO,CAAA,CAAA;;;ADQb,MAAO;IACkB,QAAA;IAA7B,YAA6B,OAAsB,CAAnD;QAA6B,IAAA,CAAA,UAAA;IAAyB;IAEtD,MAAM,aACJ,OAA6B,EAD/B;QAGE,OAAO,MAAM,IAAI,CAAC,QAAQ,IAAI,CAAA,GAAA,yCAAA,EAAQ,IAAI,CAAA,OAAA,CAAS,EAAE;IACvD;AACD;;;;AERK,MAAO;IACkB,QAAA;IAA7B,YAA6B,OAAsB,CAAnD;QAA6B,IAAA,CAAA,UAAA;IAAyB;IAEtD,MAAM,aACJ,OAA6B,EAD/B;QAGE,OAAO,MAAM,IAAI,CAAC,QAAQ,IAAI,CAAA,GAAA,yCAAA,EAAQ,IAAI,CAAA,OAAA,CAAS,EAAE;IACvD;AACD;;;;ACDK,MAAO;IACkB,QAAA;IAA7B,YAA6B,OAAsB,CAAnD;QAA6B,IAAA,CAAA,UAAA;IAAyB;IAEtD,MAAM,QAAQ,EAAU,EAAxB;QACE,OAAO,MAAM,IAAI,CAAC,QAAQ,IAAI,CAAA,GAAA,yCAAA,EAAQ,MAAM,CAAA,OAAA,EAAU,GAAE,CAAE;IAC5D;IAEA,MAAM,YAAN;QACE,OAAO,MAAM,IAAI,CAAC,QAAQ,IAAI,CAAA,GAAA,yCAAA,EAAQ,MAAM,CAAA,aAAA,CAAe;IAC7D;IAEA,MAAM,aACJ,OAA4B,EAD9B;QAGE,OAAO,MAAM,IAAI,CAAC,QAAQ,IAAI,CAAA,GAAA,yCAAA,EAAQ,MAAM,CAAA,MAAA,CAAQ,EAAE;IACxD;IAEA,MAAM,iBACJ,OAAqB,EADvB;QAGE,OAAO,MAAM,IAAI,CAAC,QAAQ,IAAI,CAAA,GAAA,yCAAA,EAAQ,MAAM,CAAA,aAAA,CAAe,EAAE;IAC/D;IAEA,MAAM,mBACJ,OAA+B,EAC/B,gBAA8B,EAFhC;QAIE,OAAO,MAAM,IAAI,CAAC,QAAQ,IAAI,CAAA,GAAA,yCAAA,EAAQ,MAAM,CAAA,aAAA,CAAe,EAAE;IAC/D;IAEA,yBACE,KAAa,EADf;QAGE,OAAO,IAAI,CAAC,QAAQ,IAAI,CAAA,GAAA,yCAAA,EAAQ,IAAI,CAAA,+BAAA,CAAiC,EAAE;mBACrE;QACD;IACH;AACD;;;;ACrCK,MAAO;IACkB,QAAA;IAA7B,YAA6B,OAAsB,CAAnD;QAA6B,IAAA,CAAA,UAAA;IAAyB;IAEtD,MAAM,QAAQ,EAAU,EAAxB;QACE,OAAO,MAAM,IAAI,CAAC,QAAQ,IAAI,CAAA,GAAA,yCAAA,EAAQ,IAAI,CAAA,QAAA,EAAW,GAAE,CAAE;IAC3D;IAEA,MAAM,aACJ,OAA6B,EAD/B;QAGE,OAAO,MAAM,IAAI,CAAC,QAAQ,IAAI,CAAA,GAAA,yCAAA,EAAQ,IAAI,CAAA,OAAA,CAAS,EAAE;IACvD;IAEA,MAAM,iBACJ,OAAqB,EADvB;QAGE,OAAO,MAAM,IAAI,CAAC,QAAQ,IAAI,CAAA,GAAA,yCAAA,EAAQ,MAAM,CAAA,cAAA,CAAgB,EAAE;IAChE;IAEA,MAAM,mBACJ,OAA+B,EAC/B,gBAA8B,EAFhC;QAIE,OAAO,MAAM,IAAI,CAAC,QAAQ,IAAI,CAAA,GAAA,yCAAA,EAAQ,MAAM,CAAA,aAAA,CAAe,EAAE;IAC/D;AACD;;;;AChCK,MAAO;IACkB,QAAA;IAA7B,YAA6B,OAAsB,CAAnD;QAA6B,IAAA,CAAA,UAAA;IAAyB;IAEtD,MAAM,aACJ,OAA8B,EADhC;QAGE,OAAO,MAAM,IAAI,CAAC,QAAQ,IAAI,CAAA,GAAA,yCAAA,EAAQ,IAAI,CAAA,QAAA,CAAU,EAAE;IACxD;AACD;;;;ACTK,MAAO;IACkB,QAAA;IAA7B,YAA6B,OAAsB,CAAnD;QAA6B,IAAA,CAAA,UAAA;IAAyB;IAEtD,MAAM,aACJ,OAA+B,EADjC;QAGE,OAAO,MAAM,IAAI,CAAC,QAAQ,IAAI,CAAA,GAAA,yCAAA,EAAQ,IAAI,CAAA,MAAA,CAAQ,EAAE;IACtD;AACD;;;;ACPK,MAAO;IACkB,QAAA;IAA7B,YAA6B,OAAsB,CAAnD;QAA6B,IAAA,CAAA,UAAA;IAAyB;IAEtD,MAAM,QAAQ,EAAU,EAAxB;QACE,OAAO,MAAM,IAAI,CAAC,QAAQ,IAAI,CAAA,GAAA,yCAAA,EAAQ,IAAI,CAAA,QAAA,EAAW,GAAE,CAAE;IAC3D;IACA,MAAM,aACJ,OAA6B,EAD/B;QAGE,OAAO,MAAM,IAAI,CAAC,QAAQ,IAAI,CAAA,GAAA,yCAAA,EAAQ,IAAI,CAAA,OAAA,CAAS,EAAE;IACvD;AACD;;;ACfK,MAAO;IAEQ,QAAA;IACA,QAAA;IAFnB,YACmB,OAAe,EACf,OAAe,CAFlC;QACmB,IAAA,CAAA,UAAA;QACA,IAAA,CAAA,UAAA;IAChB;IAEK,YAAY,MAA8B,EAA1C;QACN,MAAM,kBAAkB,IAAI;QAE5B,IAAK,MAAM,OAAO,OAAQ;YACxB,IAAI,MAAM,QAAQ,MAAM,CAAC,IAAI,GAC3B,KAAK,MAAM,SAAS,MAAM,CAAC,IAAI,CAC7B,gBAAgB,OAAO,KAAK;iBAG9B,gBAAgB,OAAO,KAAK,MAAM,CAAC,IAAI;QAE1C;QAED,OAAO,gBAAgB;IACzB;IAEA,MAAM,IACJ,OAAgB,EAChB,IAAY,EACZ,MAAU,EAHZ;QAKE,IAAI;YACF,MAAM,WAAW,MAAM,MACrB,CAAA,EAAG,IAAI,CAAC,QAAO,CAAA,EAAI,QAAO,EAAG,KAAI,CAAA,EAAI,IAAI,CAAC,YAAY,QAAc,CAAE,EACtE;gBAAE,SAAS;oBAAE,aAAa,IAAI,CAAC;gBAAO;YAAE;YAG1C,uDAAuD;YACvD,IAAI,CAAC,SAAS,IAAI;gBAChB,MAAM,QAAwB,MAAM,SAAS;gBAC7C,MAAM,IAAI,MACR,KAAK,UAAU;oBACb,QAAQ,SAAS;oBACjB,OAAO,MAAM;oBACb,SAAS,MAAM;gBAChB;YAEJ;YAED,OAAO;gBACL,MAAM,MAAM,SAAS;gBACrB,YAAY,SAAS;gBACrB,OAAO;gBACP,SAAS;YACV;QACF,EAAC,OAAO,OAAO;YACd,MAAM,UAAE,MAAM,WAAE,OAAO,EAAE,OAAO,GAAG,EAAE,GAAG,KAAK,MAAM,MAAM;YACzD,QAAQ,IAAI,yCAAyC;YACrD,OAAO;gBACL,MAAM;gBACN,YAAY;gBACZ,OAAO;gBACP,SAAS;YACV;QACF;IACH;AACD;;;ATxDK,MAAO;IAWQ,QAAA;IACA,QAAA;IAXZ,MAAoB;IACpB,OAAsB;IACtB,OAAsB;IACtB,OAAsB;IACtB,QAAwB;IACxB,OAAsB;IACtB,MAAoB;IACpB,QAAuB;IAE9B,YACmB,OAAe,EACf,UAAkB,2BAA2B,CAFhE;QACmB,IAAA,CAAA,UAAA;QACA,IAAA,CAAA,UAAA;QAEjB,IAAI,CAAC,UAAU,IAAI,CAAA,GAAA,yCAAA,EAAc,IAAI,CAAC,SAAS,IAAI,CAAC;QACpD,IAAI,CAAC,QAAQ,IAAI,CAAA,GAAA,yCAAA,EAAa,IAAI,CAAC;QACnC,IAAI,CAAC,SAAS,IAAI,CAAA,GAAA,yCAAA,EAAc,IAAI,CAAC;QACrC,IAAI,CAAC,SAAS,IAAI,CAAA,GAAA,yCAAA,EAAc,IAAI,CAAC;QACrC,IAAI,CAAC,UAAU,IAAI,CAAA,GAAA,yCAAA,EAAe,IAAI,CAAC;QACvC,IAAI,CAAC,SAAS,IAAI,CAAA,GAAA,yCAAA,EAAc,IAAI,CAAC;QACrC,IAAI,CAAC,QAAQ,IAAI,CAAA,GAAA,wCAAA,EAAa,IAAI,CAAC;QACnC,IAAI,CAAC,SAAS,IAAI,CAAA,GAAA,yCAAA,EAAc,IAAI,CAAC;IACvC;AACD;;;;;;;;;;;;;AY/BK,MAAO;IACJ,KAAa;IACb,MAAc;IACrB,YAAY,IAAY,EAAE,KAAa,CAAvC;QACE,IAAI,QAAQ,OAAO,GAAG,MAAM,IAAI,MAAM;QACtC,IAAI,SAAS,QAAQ,GAAG,MAAM,IAAI,MAAM;QACxC,IAAI,SAAS,QAAQ,KACnB,MAAM,IAAI,MAAM;QAClB,IAAI,CAAC,OAAO,QAAQ;QACpB,IAAI,CAAC,QAAQ,SAAS;IACxB;AACD;;;ADGK,MAAgB;IAGV,OAAY;IAEtB,aAAA;QACE,IAAI,CAAC,SAAS,CAAA;IAChB;IAEA,OAAO,MAAyB,EAAhC;QACE,IAAI,CAAC,OAAO,eAAe;QAC3B,OAAO,IAAI;IACb;IAEA,KAAK,KAAmB,EAAE,QAAgC,EAA1D;QACE,IAAI,CAAC,IAAI,CAAC,OAAO,WAAW;YAC1B,IAAI,CAAC,OAAO,YAAY,EAAE;YAC1B,IAAI,CAAC,OAAO,WAAW,EAAE;QAC1B;QACD,IAAI,CAAC,OAAO,UAAU,KAAK;QAC3B,IAAI,CAAC,OAAO,SAAS,KAAK;QAC1B,OAAO,IAAI;IACb;IAEA,YACE,KAAmB,EACnB,KAAgD,EAFlD;QAIE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,EAAE;QAChD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK;QACxB,OAAO,IAAI;IACb;IAEA,YAAY,KAAwB,EAAE,KAAuB,EAA7D;QACE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,KAAK;QAChC,OAAO,IAAI;IACb;IAEA,gBAAgB,KAAsB,EAAE,KAAmB,EAA3D;QACE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,MAClB,IAAI,CAAA,OAAQ,KAAK,cAAc,MAAM,IAAI,CAAC,EAAE,EAC5C,KAAK;QACR,OAAO,IAAI;IACb;IAEA,MAAM,KAAa,EAAnB;QACE,IAAI,CAAC,OAAO,QAAQ;QACpB,OAAO,IAAI;IACb;IAEA,SAAS,IAAY,EAAE,KAAa,EAApC;QACE,MAAM,aAAa,IAAI,CAAA,GAAA,yCAAA,EAAW,MAAM;QACxC,IAAI,CAAC,OAAO,OAAO,WAAW;QAC9B,IAAI,CAAC,OAAO,QAAQ,WAAW;QAC/B,OAAO,IAAI;IACb;IAEA,QAAA;QACE,OAAO,IAAI,CAAC;IACd;AACD;AAEK,MAAO,kDAA0B;AAA4B;AAC7D,MAAO,kDAA2B;AAA6B;AAC/D,MAAO,kDAA2B;AAA6B;AAC/D,MAAO,kDAA2B;AAA6B;AAC/D,MAAO,kDAA2B;AAA6B;AAC/D,MAAO,kDAA0B;AAA4B;;;;;;;;;;AGnFnE,IAAY;AAAZ,CAAA,SAAY,SAAS;IACnB,SAAA,CAAA,MAAA,GAAA;IACA,SAAA,CAAA,OAAA,GAAA;AACF,CAAA,EAHY,6CAAA,CAAA,4CAAS,CAAA,CAAA;;;;;;ACArB,IAAY;AAAZ,CAAA,SAAY,aAAa;IACvB,aAAA,CAAA,WAAA,GAAA;AACF,CAAA,EAFY,6CAAA,CAAA,4CAAa,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AQ4xEzB;;;CAGG,GACG,IAAW;AAAjB,CAAA,SAAiB,MAAM;IACrB;;;KAGG,GACH,IAAY;IAAZ,CAAA,SAAY,QAAQ;QAClB,QAAA,CAAA,QAAA,CAAA,KAAA,GAAU,eAAc,GAAA;QACxB,QAAA,CAAA,QAAA,CAAA,KAAA,GAAU,cAAa,GAAA;QACvB,QAAA,CAAA,QAAA,CAAA,KAAA,GAAU,SAAQ,GAAA;QAClB,QAAA,CAAA,QAAA,CAAA,KAAA,GAAU,iBAAgB,GAAA;IAC5B,CAAA,EALY,WAAA,OAAA,YAAA,CAAA,OAAA,WAAQ,CAAA,CAAA;AAMtB,CAAA,EAXiB,6CAAA,CAAA,4CAAM,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","sources":["src/index.ts","src/kinopoiskdev.ts","src/services/review.service.ts","src/enums/version.enum.ts","src/services/season.service.ts","src/services/movie.service.ts","src/services/person.service.ts","src/services/keyword.service.ts","src/services/image.service.ts","src/services/studio.service.ts","src/client-request.ts","src/builder/index.ts","src/builder/query.builder.ts","src/classes/pagination.ts","src/enums/index.ts","src/enums/sort-type.enum.ts","src/enums/special-value.enum.ts","src/interfaces/index.ts","src/interfaces/response.interface.ts","src/interfaces/error.interface.ts","src/interfaces/kinopoiskdev.interface.ts","src/interfaces/pagination.interface.ts","src/interfaces/query-builder.interface.ts","src/interfaces/query-fields.interface.ts","src/interfaces/api.interface.ts","src/interfaces/services/index.ts","src/interfaces/services/image-service.interface.ts","src/interfaces/services/movie-service.interface.ts","src/interfaces/services/person-service.interface.ts","src/interfaces/services/review-service.interface.ts","src/interfaces/services/season-service.interface.ts","src/interfaces/services/studio-service.interface.ts","src/interfaces/services/keyword-service.interface.ts","src/types/index.ts","src/types/image-fields.type.ts","src/types/movie-fields.type.ts","src/types/person-fields.type.ts","src/types/season-fields.type.ts","src/types/studio-fields.type.ts","src/types/keyword-fields.type.ts","src/types/review-fields.type.ts"],"sourcesContent":["export * from './kinopoiskdev';\nexport * from './builder';\nexport * from './enums';\nexport * from './interfaces';\nexport * from './types';\n","import { ReviewService } from './services/review.service';\nimport { SeasonService } from './services/season.service';\nimport { MovieService } from './services/movie.service';\nimport { PersonService } from './services/person.service';\nimport { KeywordService } from './services/keyword.service';\nimport { ImageService } from './services/image.service';\nimport { StudioService } from './services/studio.service';\nimport { ClientRequest } from './client-request';\nimport { IKinopoiskDev } from './interfaces/kinopoiskdev.interface';\n\nexport class KinopoiskDev implements IKinopoiskDev {\n  public movie: MovieService;\n  public season: SeasonService;\n  public person: PersonService;\n  public review: ReviewService;\n  public keyword: KeywordService;\n  public studio: StudioService;\n  public image: ImageService;\n  public request: ClientRequest;\n\n  constructor(\n    private readonly API_KEY: string,\n    private readonly API_URL: string = 'https://api.kinopoisk.dev',\n  ) {\n    this.request = new ClientRequest(this.API_KEY, this.API_URL);\n    this.movie = new MovieService(this.request);\n    this.season = new SeasonService(this.request);\n    this.person = new PersonService(this.request);\n    this.keyword = new KeywordService(this.request);\n    this.studio = new StudioService(this.request);\n    this.image = new ImageService(this.request);\n    this.review = new ReviewService(this.request);\n  }\n}\n","import { ClientRequest } from '../client-request';\nimport { IResponse } from '../interfaces/response.interface';\nimport { ReviewDocsResponseDto } from '../interfaces/api.interface';\nimport { VERSION } from '../enums/version.enum';\nimport { Filter } from '../interfaces/query-builder.interface';\nimport { ReviewFields } from '../types/review-fields.type';\nimport { IReviewService } from '../interfaces/services/review-service.interface';\n\nexport class ReviewService implements IReviewService {\n  constructor(private readonly request: ClientRequest) {}\n\n  async getByFilters(\n    filters: Filter<ReviewFields>,\n  ): Promise<IResponse<ReviewDocsResponseDto>> {\n    return await this.request.get(VERSION.V1, `/review`, filters);\n  }\n}\n","export enum VERSION {\n  V1 = 'v1',\n  V1_1 = 'v1_2',\n  V1_2 = 'v1.2',\n  V1_3 = 'v1.3',\n}\n","import { ClientRequest } from '../client-request';\nimport { IResponse } from '../interfaces/response.interface';\nimport { SeasonDocsResponseDto } from '../interfaces/api.interface';\nimport { VERSION } from '../enums/version.enum';\nimport { Filter } from '../interfaces/query-builder.interface';\nimport { SeasonFields } from '../types/season-fields.type';\nimport { ISeasonService } from '../interfaces/services/season-service.interface';\n\nexport class SeasonService implements ISeasonService {\n  constructor(private readonly request: ClientRequest) {}\n\n  async getByFilters(\n    filters: Filter<SeasonFields>,\n  ): Promise<IResponse<SeasonDocsResponseDto>> {\n    return await this.request.get(VERSION.V1, `/season`, filters);\n  }\n}\n","import { ClientRequest } from '../client-request';\nimport {\n  MovieAwardDocsResponseDto,\n  MovieDocsResponseDtoV13,\n  MovieDtoV13,\n  PossibleValueDto,\n  SearchMovieResponseDto,\n} from '../interfaces/api.interface';\nimport { IPagination } from '../interfaces/pagination.interface';\nimport { VERSION } from '../enums/version.enum';\nimport { IResponse } from '../interfaces/response.interface';\nimport { Filter, SearchFilter } from '../interfaces/query-builder.interface';\nimport { MovieFields } from '../types/movie-fields.type';\nimport { IMovieService } from '../interfaces/services/movie-service.interface';\n\nexport class MovieService implements IMovieService {\n  constructor(private readonly request: ClientRequest) {}\n\n  async getById(id: number): Promise<IResponse<MovieDtoV13>> {\n    return await this.request.get(VERSION.V1_3, `/movie/${id}`);\n  }\n\n  async getRandom(): Promise<IResponse<MovieDtoV13>> {\n    return await this.request.get(VERSION.V1_3, `/movie/random`);\n  }\n\n  async getByFilters(\n    filters: Filter<MovieFields>,\n  ): Promise<IResponse<MovieDocsResponseDtoV13>> {\n    return await this.request.get(VERSION.V1_3, `/movie`, filters);\n  }\n\n  async getBySearchQuery(\n    filters: SearchFilter,\n  ): Promise<IResponse<SearchMovieResponseDto>> {\n    return await this.request.get(VERSION.V1_2, `/movie/search`, filters);\n  }\n\n  async getAwardsByFilters(\n    filters: Record<string, string>,\n    paginationParams?: IPagination,\n  ): Promise<IResponse<MovieAwardDocsResponseDto>> {\n    return await this.request.get(VERSION.V1_1, `/movie/awards`, filters);\n  }\n\n  getPossibleValuesByField(\n    field: string,\n  ): Promise<IResponse<PossibleValueDto[]>> {\n    return this.request.get(VERSION.V1, `/movie/possible-values-by-field`, {\n      field,\n    });\n  }\n}\n","import { ClientRequest } from '../client-request';\nimport { IResponse } from '../interfaces/response.interface';\nimport {\n  Person,\n  PersonAwardDocsResponseDto,\n  PersonDocsResponseDto,\n  SearchPersonResponseDto,\n} from '../interfaces/api.interface';\nimport { VERSION } from '../enums/version.enum';\nimport { IPagination } from '../interfaces/pagination.interface';\nimport { Filter, SearchFilter } from '../interfaces/query-builder.interface';\nimport { PersonFields } from '../types/person-fields.type';\nimport { IPersonService } from '../interfaces/services/person-service.interface';\nimport { Pagination } from '../classes/pagination';\n\nexport class PersonService implements IPersonService {\n  constructor(private readonly request: ClientRequest) {}\n\n  async getById(id: number): Promise<IResponse<Person>> {\n    return await this.request.get(VERSION.V1, `/person/${id}`);\n  }\n\n  async getByFilters(\n    filters: Filter<PersonFields>,\n  ): Promise<IResponse<PersonDocsResponseDto>> {\n    return await this.request.get(VERSION.V1, `/person`, filters);\n  }\n\n  async getBySearchQuery(\n    filters: SearchFilter,\n  ): Promise<IResponse<SearchPersonResponseDto>> {\n    return await this.request.get(VERSION.V1_2, `/person/search`, filters);\n  }\n\n  async getAwardsByFilters(\n    filters: Record<string, string>,\n    paginationParams?: IPagination,\n  ): Promise<IResponse<PersonAwardDocsResponseDto>> {\n    return await this.request.get(VERSION.V1_1, `/movie/awards`, filters);\n  }\n}\n","import { ClientRequest } from '../client-request';\nimport { IResponse } from '../interfaces/response.interface';\nimport { KeywordDocsResponseDto } from '../interfaces/api.interface';\nimport { VERSION } from '../enums/version.enum';\nimport { Filter } from '../interfaces/query-builder.interface';\nimport { KeywordFields } from '../types/keyword-fields.type';\nimport { IKeywordService } from '../interfaces/services/keyword-service.interface';\n\nexport class KeywordService implements IKeywordService {\n  constructor(private readonly request: ClientRequest) {}\n\n  async getByFilters(\n    filters: Filter<KeywordFields>,\n  ): Promise<IResponse<KeywordDocsResponseDto>> {\n    return await this.request.get(VERSION.V1, `/keyword`, filters);\n  }\n}\n","import { KinopoiskDev } from '../index';\nimport { ClientRequest } from '../client-request';\nimport { IResponse } from '../interfaces/response.interface';\nimport { ImageDocsResponseDto } from '../interfaces/api.interface';\nimport { VERSION } from '../enums/version.enum';\nimport { IImageService } from '../interfaces/services/image-service.interface';\n\nexport class ImageService implements IImageService {\n  constructor(private readonly request: ClientRequest) {}\n\n  async getByFilters(\n    filters: Record<string, string>,\n  ): Promise<IResponse<ImageDocsResponseDto>> {\n    return await this.request.get(VERSION.V1, `/image`, filters);\n  }\n}\n","import { ClientRequest } from '../client-request';\nimport { IResponse } from '../interfaces/response.interface';\nimport { Studio, StudioDocsResponseDto } from '../interfaces/api.interface';\nimport { VERSION } from '../enums/version.enum';\nimport { Filter } from '../interfaces/query-builder.interface';\nimport { StudioFields } from '../types/studio-fields.type';\nimport { IStudioService } from '../interfaces/services/studio-service.interface';\n\nexport class StudioService implements IStudioService {\n  constructor(private readonly request: ClientRequest) {}\n\n  async getById(id: number): Promise<IResponse<Studio>> {\n    return await this.request.get(VERSION.V1, `/studio/${id}`);\n  }\n  async getByFilters(\n    filters: Filter<StudioFields>,\n  ): Promise<IResponse<StudioDocsResponseDto>> {\n    return await this.request.get(VERSION.V1, `/studio`, filters);\n  }\n}\n","import { IResponseError } from './interfaces/error.interface';\nimport { VERSION } from './enums/version.enum';\nimport { IResponse } from './interfaces/response.interface';\n\nexport class ClientRequest {\n  constructor(\n    private readonly API_KEY: string,\n    private readonly API_URL: string,\n  ) {}\n\n  private queryParams(params: { [key: string]: any }): string {\n    const urlSearchParams = new URLSearchParams();\n\n    for (const key in params) {\n      if (Array.isArray(params[key])) {\n        for (const value of params[key]) {\n          urlSearchParams.append(key, value);\n        }\n      } else {\n        urlSearchParams.append(key, params[key]);\n      }\n    }\n\n    return urlSearchParams.toString();\n  }\n\n  async get<T, P extends Record<string, unknown>>(\n    version: VERSION,\n    path: string,\n    params?: P,\n  ): Promise<IResponse<T>> {\n    try {\n      const response = await fetch(\n        `${this.API_URL}/${version}${path}?${this.queryParams(params as any)}`,\n        { headers: { 'X-API-KEY': this.API_KEY } },\n      );\n\n      // Если статус HTTP-ответа не 200, выбрасывается ошибка\n      if (!response.ok) {\n        const error: IResponseError = await response.json();\n        throw new Error(\n          JSON.stringify({\n            status: response.status,\n            error: error.error,\n            message: error.message,\n          }),\n        );\n      }\n\n      return {\n        data: await response.json(),\n        statusCode: response.status,\n        error: null,\n        message: null,\n      };\n    } catch (error) {\n      const { status, message, error: err } = JSON.parse(error.message);\n      console.log('There was an error with your request:', error);\n      return {\n        data: null,\n        statusCode: status,\n        error: err,\n        message: message,\n      };\n    }\n  }\n}\n","export * from './query.builder';\n","import { SORT_TYPE } from '../enums/sort-type.enum';\nimport { SPECIAL_VALUE } from '../enums/special-value.enum';\nimport { IQueryFields } from '../interfaces/query-fields.interface';\nimport { MovieFields } from '../types/movie-fields.type';\nimport { PersonFields } from '../types/person-fields.type';\nimport { Pagination } from '../classes/pagination';\nimport {\n  AllFields,\n  Filter,\n  IQueryBuilder,\n  SelectFields,\n} from '../interfaces/query-builder.interface';\nimport { ReviewFields } from '../types/review-fields.type';\nimport { SeasonFields } from '../types/season-fields.type';\nimport { ImageFields, StudioFields } from '../types';\n\nexport abstract class QueryBuilder<T extends IQueryFields>\n  implements IQueryBuilder<T>\n{\n  protected params: any;\n\n  constructor() {\n    this.params = {};\n  }\n\n  select(fields: SelectFields<T>[]): this {\n    this.params.selectFields = fields;\n    return this;\n  }\n\n  sort(field: AllFields<T>, sortType: SORT_TYPE | '1' | '-1'): this {\n    if (!this.params.sortField) {\n      this.params.sortField = [];\n      this.params.sortType = [];\n    }\n    this.params.sortField.push(field);\n    this.params.sortType.push(sortType);\n    return this;\n  }\n\n  filterExact(\n    field: AllFields<T>,\n    value: string | number | boolean | SPECIAL_VALUE,\n  ): this {\n    if (!this.params[field]) this.params[field] = [];\n    this.params[field].push(value);\n    return this;\n  }\n\n  filterRange(field: T['NumberFields'], range: [number, number]): this {\n    this.params[field] = range.join('-');\n    return this;\n  }\n\n  filterDateRange(field: T['DateFields'], range: [Date, Date]): this {\n    this.params[field] = range\n      .map(date => date.toISOString().split('T')[0])\n      .join('-');\n    return this;\n  }\n\n  query(query: string): this {\n    this.params.query = query;\n    return this;\n  }\n\n  paginate(page: number, limit: number): this {\n    const pagination = new Pagination(page, limit);\n    this.params.page = pagination.page;\n    this.params.limit = pagination.limit;\n    return this;\n  }\n\n  build(): Filter<T> {\n    return this.params;\n  }\n}\n\nexport class MovieQueryBuilder extends QueryBuilder<MovieFields> {}\nexport class PersonQueryBuilder extends QueryBuilder<PersonFields> {}\nexport class ReviewQueryBuilder extends QueryBuilder<ReviewFields> {}\nexport class SeasonQueryBuilder extends QueryBuilder<SeasonFields> {}\nexport class StudioQueryBuilder extends QueryBuilder<StudioFields> {}\nexport class ImageQueryBuilder extends QueryBuilder<ImageFields> {}\n","import { IPagination } from '../interfaces/pagination.interface';\n\nexport class Pagination implements IPagination {\n  public page: number;\n  public limit: number;\n  constructor(page: number, limit: number) {\n    if (page && page < 1) throw new Error('Page must be greater than 0');\n    if (limit && limit < 1) throw new Error('Limit must be greater than 0');\n    if (limit && limit > 250)\n      throw new Error('Limit must be less than or equal to 250');\n    this.page = page || 1;\n    this.limit = limit || 10;\n  }\n}\n","export * from './sort-type.enum';\nexport * from './special-value.enum';\nexport * from './version.enum';\n","export enum SORT_TYPE {\n  ASC = '1',\n  DESC = '-1',\n}\n","export enum SPECIAL_VALUE {\n  NOT_NULL = '!null',\n}\n","export * from './response.interface';\nexport * from './error.interface';\nexport * from './kinopoiskdev.interface';\nexport * from './pagination.interface';\nexport * from './query-builder.interface';\nexport * from './query-fields.interface';\nexport * from './api.interface';\nexport * from './services';\n","import { IResponseError } from './error.interface';\n\nexport interface IResponse<T> extends IResponseError {\n  data: T | null;\n}\n","export interface IResponseError {\n  statusCode: number;\n  message: string;\n  error: string;\n}\n","import { MovieService } from '../services/movie.service';\nimport { SeasonService } from '../services/season.service';\nimport { PersonService } from '../services/person.service';\nimport { ReviewService } from '../services/review.service';\nimport { KeywordService } from '../services/keyword.service';\nimport { StudioService } from '../services/studio.service';\nimport { ImageService } from '../services/image.service';\nimport { ClientRequest } from '../client-request';\n\nexport interface IKinopoiskDev {\n  movie: MovieService;\n  season: SeasonService;\n  person: PersonService;\n  review: ReviewService;\n  keyword: KeywordService;\n  studio: StudioService;\n  image: ImageService;\n  request: ClientRequest;\n}\n","export interface IPagination {\n  page?: number;\n  limit?: number;\n}\n","import { IQueryFields } from './query-fields.interface';\nimport { SORT_TYPE } from '../enums/sort-type.enum';\nimport { SPECIAL_VALUE } from '../enums/special-value.enum';\n\nexport type AllFields<T extends IQueryFields> =\n  | T['BooleanFields']\n  | T['NumberFields']\n  | T['DateFields']\n  | T['StringFields'];\n\nexport type SelectFields<T extends IQueryFields> =\n  | AllFields<T>\n  | T['ObjectFields'];\n\nexport type FiltersValue =\n  | string\n  | number\n  | boolean\n  | SPECIAL_VALUE\n  | (string | number | boolean | SPECIAL_VALUE)[];\n\nexport type Filter<T extends IQueryFields> = Partial<{\n  [key in\n    | AllFields<T>\n    | 'selectFields'\n    | 'sortField'\n    | 'sortType'\n    | 'page'\n    | 'limit']: FiltersValue;\n}>;\n\nexport type SearchFilter = Partial<{\n  [key in 'query' | 'page' | 'limit']: FiltersValue;\n}>;\n\nexport interface IQueryBuilder<T extends IQueryFields> {\n  select(fields: SelectFields<T>[]): IQueryBuilder<T>;\n  sort(field: AllFields<T>, sortType: SORT_TYPE | '1' | '-1'): IQueryBuilder<T>;\n  filterExact(\n    field: AllFields<T>,\n    value: string | number | boolean | SPECIAL_VALUE,\n  ): IQueryBuilder<T>;\n  filterRange(\n    field: T['NumberFields'],\n    range: [number, number],\n  ): IQueryBuilder<T>;\n  filterDateRange(\n    field: T['DateFields'],\n    range: [Date, Date],\n  ): IQueryBuilder<T>;\n  query(query: string): IQueryBuilder<T>;\n  paginate(page: number, limit: number): IQueryBuilder<T>;\n  build(): Filter<T>;\n}\n","export interface IQueryFields {\n  StringFields: string;\n  DateFields: string;\n  NumberFields: string;\n  BooleanFields: string;\n  ObjectFields: string;\n}\n","/**\n *\n * @export\n * @interface Audience\n */\nexport interface Audience {\n  /**\n   * Количество просмотров в кино\n   * @type {number}\n   * @memberof Audience\n   */\n  count: number;\n  /**\n   * Страна в которой проходил показ\n   * @type {string}\n   * @memberof Audience\n   */\n  country: string;\n}\n/**\n *\n * @export\n * @interface BirthPlace\n */\nexport interface BirthPlace {\n  /**\n   *\n   * @type {string}\n   * @memberof BirthPlace\n   */\n  value?: string;\n}\n/**\n *\n * @export\n * @interface CurrencyValue\n */\nexport interface CurrencyValue {\n  /**\n   * Сумма\n   * @type {number}\n   * @memberof CurrencyValue\n   */\n  value?: number;\n  /**\n   * Валюта\n   * @type {string}\n   * @memberof CurrencyValue\n   */\n  currency?: string;\n}\n/**\n *\n * @export\n * @interface DeathPlace\n */\nexport interface DeathPlace {\n  /**\n   *\n   * @type {string}\n   * @memberof DeathPlace\n   */\n  value?: string;\n}\n/**\n *\n * @export\n * @interface Episode\n */\nexport interface Episode {\n  /**\n   *\n   * @type {number}\n   * @memberof Episode\n   */\n  number?: number;\n  /**\n   *\n   * @type {string}\n   * @memberof Episode\n   */\n  name?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Episode\n   */\n  enName?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Episode\n   */\n  description?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Episode\n   */\n  date?: string;\n}\n/**\n *\n * @export\n * @interface ErrorResponseDto\n */\nexport interface ErrorResponseDto {\n  /**\n   *\n   * @type {number}\n   * @memberof ErrorResponseDto\n   */\n  statusCode: number;\n  /**\n   *\n   * @type {string}\n   * @memberof ErrorResponseDto\n   */\n  message: string;\n  /**\n   *\n   * @type {string}\n   * @memberof ErrorResponseDto\n   */\n  error: string;\n}\n/**\n *\n * @export\n * @interface ExternalId\n */\nexport interface ExternalId {\n  /**\n   * ID из kinopoisk HD\n   * @type {string}\n   * @memberof ExternalId\n   */\n  kpHD?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof ExternalId\n   */\n  imdb?: string;\n  /**\n   *\n   * @type {number}\n   * @memberof ExternalId\n   */\n  tmdb?: number;\n}\n/**\n *\n * @export\n * @interface FactInMovie\n */\nexport interface FactInMovie {\n  /**\n   *\n   * @type {string}\n   * @memberof FactInMovie\n   */\n  value: string;\n  /**\n   *\n   * @type {string}\n   * @memberof FactInMovie\n   */\n  type: string;\n  /**\n   *\n   * @type {boolean}\n   * @memberof FactInMovie\n   */\n  spoiler: boolean;\n}\n/**\n *\n * @export\n * @interface FactInPerson\n */\nexport interface FactInPerson {\n  /**\n   *\n   * @type {string}\n   * @memberof FactInPerson\n   */\n  value?: string;\n}\n/**\n *\n * @export\n * @interface Fees\n */\nexport interface Fees {\n  /**\n   *\n   * @type {CurrencyValue}\n   * @memberof Fees\n   */\n  world?: CurrencyValue;\n  /**\n   *\n   * @type {CurrencyValue}\n   * @memberof Fees\n   */\n  russia?: CurrencyValue;\n  /**\n   *\n   * @type {CurrencyValue}\n   * @memberof Fees\n   */\n  usa?: CurrencyValue;\n}\n/**\n *\n * @export\n * @interface ForbiddenErrorResponseDto\n */\nexport interface ForbiddenErrorResponseDto {\n  /**\n   *\n   * @type {number}\n   * @memberof ForbiddenErrorResponseDto\n   */\n  statusCode: number;\n  /**\n   *\n   * @type {string}\n   * @memberof ForbiddenErrorResponseDto\n   */\n  message: string;\n  /**\n   *\n   * @type {string}\n   * @memberof ForbiddenErrorResponseDto\n   */\n  error: string;\n}\n/**\n *\n * @export\n * @interface Image\n */\nexport interface Image {\n  /**\n   *\n   * @type {number}\n   * @memberof Image\n   */\n  movieId: number;\n  /**\n   *\n   * @type {string}\n   * @memberof Image\n   */\n  type?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Image\n   */\n  language?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Image\n   */\n  url?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Image\n   */\n  previewUrl?: string;\n  /**\n   *\n   * @type {number}\n   * @memberof Image\n   */\n  height?: number;\n  /**\n   *\n   * @type {number}\n   * @memberof Image\n   */\n  width?: number;\n}\n/**\n *\n * @export\n * @interface ImageDocsResponseDto\n */\nexport interface ImageDocsResponseDto {\n  /**\n   *\n   * @type {Array<Image>}\n   * @memberof ImageDocsResponseDto\n   */\n  docs: Array<Image>;\n  /**\n   * Общее количество результатов\n   * @type {number}\n   * @memberof ImageDocsResponseDto\n   */\n  total: number;\n  /**\n   * Количество результатов на странице\n   * @type {number}\n   * @memberof ImageDocsResponseDto\n   */\n  limit: number;\n  /**\n   * Текущая страница\n   * @type {number}\n   * @memberof ImageDocsResponseDto\n   */\n  page: number;\n  /**\n   * Сколько страниц всего\n   * @type {number}\n   * @memberof ImageDocsResponseDto\n   */\n  pages: number;\n}\n/**\n *\n * @export\n * @interface Images\n */\nexport interface Images {\n  /**\n   *\n   * @type {number}\n   * @memberof Images\n   */\n  postersCount: number;\n  /**\n   *\n   * @type {number}\n   * @memberof Images\n   */\n  backdropsCount: number;\n  /**\n   *\n   * @type {number}\n   * @memberof Images\n   */\n  framesCount: number;\n}\n/**\n *\n * @export\n * @interface InlineResponse200\n */\nexport interface InlineResponse200 {\n  /**\n   *\n   * @type {string}\n   * @memberof InlineResponse200\n   */\n  status?: string;\n  /**\n   *\n   * @type {{ [key: string]: InlineResponse200Info; }}\n   * @memberof InlineResponse200\n   */\n  info?: { [key: string]: InlineResponse200Info };\n  /**\n   *\n   * @type {{ [key: string]: InlineResponse200Info; }}\n   * @memberof InlineResponse200\n   */\n  error?: { [key: string]: InlineResponse200Info };\n  /**\n   *\n   * @type {{ [key: string]: InlineResponse200Info; }}\n   * @memberof InlineResponse200\n   */\n  details?: { [key: string]: InlineResponse200Info };\n}\n/**\n *\n * @export\n * @interface InlineResponse200Info\n */\nexport interface InlineResponse200Info {\n  /**\n   *\n   * @type {string}\n   * @memberof InlineResponse200Info\n   */\n  status?: string;\n}\n/**\n *\n * @export\n * @interface InlineResponse503\n */\nexport interface InlineResponse503 {\n  /**\n   *\n   * @type {string}\n   * @memberof InlineResponse503\n   */\n  status?: string;\n  /**\n   *\n   * @type {{ [key: string]: InlineResponse200Info; }}\n   * @memberof InlineResponse503\n   */\n  info?: { [key: string]: InlineResponse200Info };\n  /**\n   *\n   * @type {{ [key: string]: InlineResponse200Info; }}\n   * @memberof InlineResponse503\n   */\n  error?: { [key: string]: InlineResponse200Info };\n  /**\n   *\n   * @type {{ [key: string]: InlineResponse200Info; }}\n   * @memberof InlineResponse503\n   */\n  details?: { [key: string]: InlineResponse200Info };\n}\n/**\n *\n * @export\n * @interface ItemName\n */\nexport interface ItemName {\n  /**\n   *\n   * @type {string}\n   * @memberof ItemName\n   */\n  name?: string;\n}\n/**\n *\n * @export\n * @interface Keyword\n */\nexport interface Keyword {\n  /**\n   *\n   * @type {string}\n   * @memberof Keyword\n   */\n  id: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Keyword\n   */\n  title: string;\n  /**\n   *\n   * @type {MovieFromKeyword}\n   * @memberof Keyword\n   */\n  movies?: MovieFromKeyword;\n}\n/**\n *\n * @export\n * @interface KeywordDocsResponseDto\n */\nexport interface KeywordDocsResponseDto {\n  /**\n   *\n   * @type {Array<Keyword>}\n   * @memberof KeywordDocsResponseDto\n   */\n  docs: Array<Keyword>;\n  /**\n   * Общее количество результатов\n   * @type {number}\n   * @memberof KeywordDocsResponseDto\n   */\n  total: number;\n  /**\n   * Количество результатов на странице\n   * @type {number}\n   * @memberof KeywordDocsResponseDto\n   */\n  limit: number;\n  /**\n   * Текущая страница\n   * @type {number}\n   * @memberof KeywordDocsResponseDto\n   */\n  page: number;\n  /**\n   * Сколько страниц всего\n   * @type {number}\n   * @memberof KeywordDocsResponseDto\n   */\n  pages: number;\n}\n/**\n *\n * @export\n * @interface LinkedMovie\n */\nexport interface LinkedMovie {\n  /**\n   *\n   * @type {number}\n   * @memberof LinkedMovie\n   */\n  id?: number;\n  /**\n   *\n   * @type {string}\n   * @memberof LinkedMovie\n   */\n  name: string;\n  /**\n   *\n   * @type {string}\n   * @memberof LinkedMovie\n   */\n  enName: string;\n  /**\n   *\n   * @type {string}\n   * @memberof LinkedMovie\n   */\n  alternativeName: string;\n  /**\n   *\n   * @type {string}\n   * @memberof LinkedMovie\n   */\n  type?: string;\n  /**\n   *\n   * @type {ShortImage}\n   * @memberof LinkedMovie\n   */\n  poster: ShortImage;\n}\n/**\n *\n * @export\n * @interface Logo\n */\nexport interface Logo {\n  /**\n   * Чтобы найти фильмы с этим полем, используйте: `!null`\n   * @type {string}\n   * @memberof Logo\n   */\n  url?: string;\n}\n/**\n *\n * @export\n * @interface MeiliMovieEntity\n */\nexport interface MeiliMovieEntity {\n  /**\n   *\n   * @type {number}\n   * @memberof MeiliMovieEntity\n   */\n  id: number;\n  /**\n   *\n   * @type {string}\n   * @memberof MeiliMovieEntity\n   */\n  name: string;\n  /**\n   *\n   * @type {string}\n   * @memberof MeiliMovieEntity\n   */\n  alternativeName: string;\n  /**\n   *\n   * @type {string}\n   * @memberof MeiliMovieEntity\n   */\n  enName: string;\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof MeiliMovieEntity\n   */\n  names: Array<string>;\n  /**\n   *\n   * @type {string}\n   * @memberof MeiliMovieEntity\n   */\n  type: string;\n  /**\n   *\n   * @type {number}\n   * @memberof MeiliMovieEntity\n   */\n  year: number;\n  /**\n   *\n   * @type {string}\n   * @memberof MeiliMovieEntity\n   */\n  description: string;\n  /**\n   *\n   * @type {string}\n   * @memberof MeiliMovieEntity\n   */\n  shortDescription: string;\n  /**\n   *\n   * @type {string}\n   * @memberof MeiliMovieEntity\n   */\n  logo: string;\n  /**\n   *\n   * @type {string}\n   * @memberof MeiliMovieEntity\n   */\n  poster: string;\n  /**\n   *\n   * @type {string}\n   * @memberof MeiliMovieEntity\n   */\n  backdrop: string;\n  /**\n   *\n   * @type {number}\n   * @memberof MeiliMovieEntity\n   */\n  rating: number;\n  /**\n   *\n   * @type {number}\n   * @memberof MeiliMovieEntity\n   */\n  votes: number;\n  /**\n   *\n   * @type {number}\n   * @memberof MeiliMovieEntity\n   */\n  movieLength: number;\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof MeiliMovieEntity\n   */\n  genres: Array<string>;\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof MeiliMovieEntity\n   */\n  countries: Array<string>;\n  /**\n   *\n   * @type {Array<number>}\n   * @memberof MeiliMovieEntity\n   */\n  releaseYears: Array<number>;\n}\n/**\n *\n * @export\n * @interface MeiliPersonEntity\n */\nexport interface MeiliPersonEntity {\n  /**\n   *\n   * @type {number}\n   * @memberof MeiliPersonEntity\n   */\n  id: number;\n  /**\n   *\n   * @type {string}\n   * @memberof MeiliPersonEntity\n   */\n  name: string;\n  /**\n   *\n   * @type {string}\n   * @memberof MeiliPersonEntity\n   */\n  enName: string;\n  /**\n   *\n   * @type {string}\n   * @memberof MeiliPersonEntity\n   */\n  photo: string;\n  /**\n   *\n   * @type {string}\n   * @memberof MeiliPersonEntity\n   */\n  sex: string;\n  /**\n   *\n   * @type {number}\n   * @memberof MeiliPersonEntity\n   */\n  growth: number;\n  /**\n   *\n   * @type {string}\n   * @memberof MeiliPersonEntity\n   */\n  birthday: string;\n  /**\n   *\n   * @type {string}\n   * @memberof MeiliPersonEntity\n   */\n  death: string;\n  /**\n   *\n   * @type {number}\n   * @memberof MeiliPersonEntity\n   */\n  age: number;\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof MeiliPersonEntity\n   */\n  birthPlace: Array<string>;\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof MeiliPersonEntity\n   */\n  deathPlace: Array<string>;\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof MeiliPersonEntity\n   */\n  profession: Array<string>;\n}\n/**\n *\n * @export\n * @interface Movie\n */\nexport interface Movie {\n  /**\n   *\n   * @type {number}\n   * @memberof Movie\n   */\n  id: number;\n  /**\n   *\n   * @type {string}\n   * @memberof Movie\n   */\n  name: string;\n  /**\n   *\n   * @type {number}\n   * @memberof Movie\n   */\n  rating: number;\n}\n/**\n *\n * @export\n * @interface MovieAwardDocsResponseDto\n */\nexport interface MovieAwardDocsResponseDto {\n  /**\n   *\n   * @type {Array<PartialTypeClass>}\n   * @memberof MovieAwardDocsResponseDto\n   */\n  docs: Array<PartialTypeClass>;\n  /**\n   * Общее количество результатов\n   * @type {number}\n   * @memberof MovieAwardDocsResponseDto\n   */\n  total: number;\n  /**\n   * Количество результатов на странице\n   * @type {number}\n   * @memberof MovieAwardDocsResponseDto\n   */\n  limit: number;\n  /**\n   * Текущая страница\n   * @type {number}\n   * @memberof MovieAwardDocsResponseDto\n   */\n  page: number;\n  /**\n   * Сколько страниц всего\n   * @type {number}\n   * @memberof MovieAwardDocsResponseDto\n   */\n  pages: number;\n}\n/**\n *\n * @export\n * @interface MovieDocsResponseDtoV1\n */\nexport interface MovieDocsResponseDtoV1 {\n  /**\n   *\n   * @type {Array<MovieDtoV1>}\n   * @memberof MovieDocsResponseDtoV1\n   */\n  docs: Array<MovieDtoV1>;\n  /**\n   * Общее количество результатов\n   * @type {number}\n   * @memberof MovieDocsResponseDtoV1\n   */\n  total: number;\n  /**\n   * Количество результатов на странице\n   * @type {number}\n   * @memberof MovieDocsResponseDtoV1\n   */\n  limit: number;\n  /**\n   * Текущая страница\n   * @type {number}\n   * @memberof MovieDocsResponseDtoV1\n   */\n  page: number;\n  /**\n   * Сколько страниц всего\n   * @type {number}\n   * @memberof MovieDocsResponseDtoV1\n   */\n  pages: number;\n}\n/**\n *\n * @export\n * @interface MovieDocsResponseDtoV13\n */\nexport interface MovieDocsResponseDtoV13 {\n  /**\n   *\n   * @type {Array<MovieDtoV13>}\n   * @memberof MovieDocsResponseDtoV13\n   */\n  docs: Array<MovieDtoV13>;\n  /**\n   * Общее количество результатов\n   * @type {number}\n   * @memberof MovieDocsResponseDtoV13\n   */\n  total: number;\n  /**\n   * Количество результатов на странице\n   * @type {number}\n   * @memberof MovieDocsResponseDtoV13\n   */\n  limit: number;\n  /**\n   * Текущая страница\n   * @type {number}\n   * @memberof MovieDocsResponseDtoV13\n   */\n  page: number;\n  /**\n   * Сколько страниц всего\n   * @type {number}\n   * @memberof MovieDocsResponseDtoV13\n   */\n  pages: number;\n}\n/**\n *\n * @export\n * @interface MovieDtoV1\n */\nexport interface MovieDtoV1 {\n  /**\n   * Id фильма с кинопоиска\n   * @type {number}\n   * @memberof MovieDtoV1\n   */\n  id: number;\n  /**\n   *\n   * @type {ExternalId}\n   * @memberof MovieDtoV1\n   */\n  externalId: ExternalId;\n  /**\n   *\n   * @type {string}\n   * @memberof MovieDtoV1\n   */\n  name?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof MovieDtoV1\n   */\n  alternativeName?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof MovieDtoV1\n   */\n  enName?: string;\n  /**\n   *\n   * @type {Array<Name>}\n   * @memberof MovieDtoV1\n   */\n  names: Array<Name>;\n  /**\n   * Тип тайтла. Доступны: movie | tv-series | cartoon | anime | animated-series | tv-show\n   * @type {string}\n   * @memberof MovieDtoV1\n   */\n  type: string;\n  /**\n   * Тип тайтла в числовом обозначении. Доступны: 1 (movie) | 2 (tv-series) | 3 (cartoon) | 4 (anime) | 5 (animated-series) | 6 (tv-show)\n   * @type {number}\n   * @memberof MovieDtoV1\n   */\n  typeNumber: number;\n  /**\n   * Год премьеры. При поиске по этому полю, можно использовать интервалы 1860-2030\n   * @type {number}\n   * @memberof MovieDtoV1\n   */\n  year?: number;\n  /**\n   * Описание тайтла\n   * @type {string}\n   * @memberof MovieDtoV1\n   */\n  description?: string;\n  /**\n   * Сокращенное описание\n   * @type {string}\n   * @memberof MovieDtoV1\n   */\n  shortDescription?: string;\n  /**\n   * Слоган\n   * @type {string}\n   * @memberof MovieDtoV1\n   */\n  slogan?: string;\n  /**\n   * Статус релиза тайтла. Доступные значения: filming | pre-production | completed | announced | post-production\n   * @type {string}\n   * @memberof MovieDtoV1\n   */\n  status?: string;\n  /**\n   *\n   * @type {Rating}\n   * @memberof MovieDtoV1\n   */\n  rating?: Rating;\n  /**\n   *\n   * @type {Votes}\n   * @memberof MovieDtoV1\n   */\n  votes?: Votes;\n  /**\n   * Продолжительность фильма\n   * @type {number}\n   * @memberof MovieDtoV1\n   */\n  movieLength?: number;\n  /**\n   * Возрастной рейтинг по MPAA\n   * @type {string}\n   * @memberof MovieDtoV1\n   */\n  ratingMpaa?: string;\n  /**\n   * Возрастной рейтинг\n   * @type {number}\n   * @memberof MovieDtoV1\n   */\n  ageRating?: number;\n  /**\n   *\n   * @type {Logo}\n   * @memberof MovieDtoV1\n   */\n  logo?: Logo;\n  /**\n   *\n   * @type {ShortImage}\n   * @memberof MovieDtoV1\n   */\n  poster?: ShortImage;\n  /**\n   *\n   * @type {ShortImage}\n   * @memberof MovieDtoV1\n   */\n  backdrop?: ShortImage;\n  /**\n   *\n   * @type {VideoTypes}\n   * @memberof MovieDtoV1\n   */\n  videos?: VideoTypes;\n  /**\n   *\n   * @type {Array<ItemName>}\n   * @memberof MovieDtoV1\n   */\n  genres?: Array<ItemName>;\n  /**\n   *\n   * @type {Array<ItemName>}\n   * @memberof MovieDtoV1\n   */\n  countries?: Array<ItemName>;\n  /**\n   *\n   * @type {Array<PersonInMovie>}\n   * @memberof MovieDtoV1\n   */\n  persons?: Array<PersonInMovie>;\n  /**\n   *\n   * @type {ReviewInfo}\n   * @memberof MovieDtoV1\n   */\n  reviewInfo?: ReviewInfo;\n  /**\n   *\n   * @type {Array<SeasonInfo>}\n   * @memberof MovieDtoV1\n   */\n  seasonsInfo?: Array<SeasonInfo>;\n  /**\n   *\n   * @type {CurrencyValue}\n   * @memberof MovieDtoV1\n   */\n  budget?: CurrencyValue;\n  /**\n   *\n   * @type {Fees}\n   * @memberof MovieDtoV1\n   */\n  fees?: Fees;\n  /**\n   *\n   * @type {Premiere}\n   * @memberof MovieDtoV1\n   */\n  premiere?: Premiere;\n  /**\n   *\n   * @type {Array<LinkedMovie>}\n   * @memberof MovieDtoV1\n   */\n  similarMovies?: Array<LinkedMovie>;\n  /**\n   *\n   * @type {Array<LinkedMovie>}\n   * @memberof MovieDtoV1\n   */\n  sequelsAndPrequels?: Array<LinkedMovie>;\n  /**\n   *\n   * @type {Watchability}\n   * @memberof MovieDtoV1\n   */\n  watchability?: Watchability;\n  /**\n   *\n   * @type {Array<YearRange>}\n   * @memberof MovieDtoV1\n   */\n  releaseYears?: Array<YearRange>;\n  /**\n   * Позиция тайтла в топ 10. Чтобы найти фильмы участвующие в рейтинге используйте: `!null`\n   * @type {number}\n   * @memberof MovieDtoV1\n   */\n  top10?: number;\n  /**\n   * Позиция тайтла в топ 250. Чтобы найти фильмы участвующие в рейтинге используйте: `!null`\n   * @type {number}\n   * @memberof MovieDtoV1\n   */\n  top250?: number;\n  /**\n   *\n   * @type {Array<FactInMovie>}\n   * @memberof MovieDtoV1\n   */\n  facts: Array<FactInMovie>;\n  /**\n   *\n   * @type {Images}\n   * @memberof MovieDtoV1\n   */\n  imagesInfo: Images;\n  /**\n   *\n   * @type {Array<VendorImage>}\n   * @memberof MovieDtoV1\n   */\n  productionCompanies: Array<VendorImage>;\n}\n/**\n *\n * @export\n * @interface MovieDtoV13\n */\nexport interface MovieDtoV13 {\n  /**\n   * Id фильма с кинопоиска\n   * @type {number}\n   * @memberof MovieDtoV13\n   */\n  id: number;\n  /**\n   *\n   * @type {ExternalId}\n   * @memberof MovieDtoV13\n   */\n  externalId: ExternalId;\n  /**\n   *\n   * @type {string}\n   * @memberof MovieDtoV13\n   */\n  name?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof MovieDtoV13\n   */\n  alternativeName?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof MovieDtoV13\n   */\n  enName?: string;\n  /**\n   *\n   * @type {Array<Name>}\n   * @memberof MovieDtoV13\n   */\n  names: Array<Name>;\n  /**\n   * Тип тайтла. Доступны: movie | tv-series | cartoon | anime | animated-series | tv-show\n   * @type {string}\n   * @memberof MovieDtoV13\n   */\n  type: string;\n  /**\n   * Тип тайтла в числовом обозначении. Доступны: 1 (movie) | 2 (tv-series) | 3 (cartoon) | 4 (anime) | 5 (animated-series) | 6 (tv-show)\n   * @type {number}\n   * @memberof MovieDtoV13\n   */\n  typeNumber: number;\n  /**\n   * Год премьеры. При поиске по этому полю, можно использовать интервалы 1860-2030\n   * @type {number}\n   * @memberof MovieDtoV13\n   */\n  year?: number;\n  /**\n   * Описание тайтла\n   * @type {string}\n   * @memberof MovieDtoV13\n   */\n  description?: string;\n  /**\n   * Сокращенное описание\n   * @type {string}\n   * @memberof MovieDtoV13\n   */\n  shortDescription?: string;\n  /**\n   * Слоган\n   * @type {string}\n   * @memberof MovieDtoV13\n   */\n  slogan?: string;\n  /**\n   * Статус релиза тайтла. Доступные значения: filming | pre-production | completed | announced | post-production\n   * @type {string}\n   * @memberof MovieDtoV13\n   */\n  status?: string;\n  /**\n   *\n   * @type {Rating}\n   * @memberof MovieDtoV13\n   */\n  rating?: Rating;\n  /**\n   *\n   * @type {Votes}\n   * @memberof MovieDtoV13\n   */\n  votes?: Votes;\n  /**\n   * Продолжительность фильма\n   * @type {number}\n   * @memberof MovieDtoV13\n   */\n  movieLength?: number;\n  /**\n   * Возрастной рейтинг по MPAA\n   * @type {string}\n   * @memberof MovieDtoV13\n   */\n  ratingMpaa?: string;\n  /**\n   * Возрастной рейтинг\n   * @type {number}\n   * @memberof MovieDtoV13\n   */\n  ageRating?: number;\n  /**\n   *\n   * @type {Logo}\n   * @memberof MovieDtoV13\n   */\n  logo?: Logo;\n  /**\n   *\n   * @type {ShortImage}\n   * @memberof MovieDtoV13\n   */\n  poster?: ShortImage;\n  /**\n   *\n   * @type {ShortImage}\n   * @memberof MovieDtoV13\n   */\n  backdrop?: ShortImage;\n  /**\n   *\n   * @type {VideoTypes}\n   * @memberof MovieDtoV13\n   */\n  videos?: VideoTypes;\n  /**\n   *\n   * @type {Array<ItemName>}\n   * @memberof MovieDtoV13\n   */\n  genres?: Array<ItemName>;\n  /**\n   *\n   * @type {Array<ItemName>}\n   * @memberof MovieDtoV13\n   */\n  countries?: Array<ItemName>;\n  /**\n   *\n   * @type {Array<PersonInMovie>}\n   * @memberof MovieDtoV13\n   */\n  persons?: Array<PersonInMovie>;\n  /**\n   *\n   * @type {ReviewInfo}\n   * @memberof MovieDtoV13\n   */\n  reviewInfo?: ReviewInfo;\n  /**\n   *\n   * @type {Array<SeasonInfo>}\n   * @memberof MovieDtoV13\n   */\n  seasonsInfo?: Array<SeasonInfo>;\n  /**\n   *\n   * @type {CurrencyValue}\n   * @memberof MovieDtoV13\n   */\n  budget?: CurrencyValue;\n  /**\n   *\n   * @type {Fees}\n   * @memberof MovieDtoV13\n   */\n  fees?: Fees;\n  /**\n   *\n   * @type {Premiere}\n   * @memberof MovieDtoV13\n   */\n  premiere?: Premiere;\n  /**\n   *\n   * @type {Array<LinkedMovie>}\n   * @memberof MovieDtoV13\n   */\n  similarMovies?: Array<LinkedMovie>;\n  /**\n   *\n   * @type {Array<LinkedMovie>}\n   * @memberof MovieDtoV13\n   */\n  sequelsAndPrequels?: Array<LinkedMovie>;\n  /**\n   *\n   * @type {Watchability}\n   * @memberof MovieDtoV13\n   */\n  watchability?: Watchability;\n  /**\n   *\n   * @type {Array<YearRange>}\n   * @memberof MovieDtoV13\n   */\n  releaseYears?: Array<YearRange>;\n  /**\n   * Позиция тайтла в топ 10. Чтобы найти фильмы участвующие в рейтинге используйте: `!null`\n   * @type {number}\n   * @memberof MovieDtoV13\n   */\n  top10?: number;\n  /**\n   * Позиция тайтла в топ 250. Чтобы найти фильмы участвующие в рейтинге используйте: `!null`\n   * @type {number}\n   * @memberof MovieDtoV13\n   */\n  top250?: number;\n  /**\n   * Признак того, что тайтл находится в прокате\n   * @type {boolean}\n   * @memberof MovieDtoV13\n   */\n  ticketsOnSale?: boolean;\n  /**\n   * Продолжительность всех серий\n   * @type {number}\n   * @memberof MovieDtoV13\n   */\n  totalSeriesLength?: number;\n  /**\n   * Средняя продолжительность серии\n   * @type {number}\n   * @memberof MovieDtoV13\n   */\n  seriesLength?: number;\n  /**\n   * Признак сериала\n   * @type {boolean}\n   * @memberof MovieDtoV13\n   */\n  isSeries: boolean;\n  /**\n   *\n   * @type {Array<Audience>}\n   * @memberof MovieDtoV13\n   */\n  audience?: Array<Audience>;\n  /**\n   *\n   * @type {Array<FactInMovie>}\n   * @memberof MovieDtoV13\n   */\n  facts: Array<FactInMovie>;\n  /**\n   *\n   * @type {Images}\n   * @memberof MovieDtoV13\n   */\n  imagesInfo: Images;\n  /**\n   *\n   * @type {Array<VendorImage>}\n   * @memberof MovieDtoV13\n   */\n  productionCompanies: Array<VendorImage>;\n}\n/**\n *\n * @export\n * @interface MovieFromKeyword\n */\nexport interface MovieFromKeyword {\n  /**\n   *\n   * @type {number}\n   * @memberof MovieFromKeyword\n   */\n  id?: number;\n}\n/**\n *\n * @export\n * @interface MovieFromStudio\n */\nexport interface MovieFromStudio {\n  /**\n   *\n   * @type {number}\n   * @memberof MovieFromStudio\n   */\n  id?: number;\n}\n/**\n *\n * @export\n * @interface MovieInPerson\n */\nexport interface MovieInPerson {\n  /**\n   *\n   * @type {number}\n   * @memberof MovieInPerson\n   */\n  id: number;\n  /**\n   *\n   * @type {string}\n   * @memberof MovieInPerson\n   */\n  name?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof MovieInPerson\n   */\n  alternativeName?: string;\n  /**\n   *\n   * @type {number}\n   * @memberof MovieInPerson\n   */\n  rating?: number;\n  /**\n   *\n   * @type {boolean}\n   * @memberof MovieInPerson\n   */\n  general?: boolean;\n  /**\n   *\n   * @type {string}\n   * @memberof MovieInPerson\n   */\n  description?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof MovieInPerson\n   */\n  enProfession?: string;\n}\n/**\n *\n * @export\n * @interface Name\n */\nexport interface Name {\n  /**\n   *\n   * @type {string}\n   * @memberof Name\n   */\n  name?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Name\n   */\n  language?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Name\n   */\n  type?: string;\n}\n/**\n *\n * @export\n * @interface Nomination\n */\nexport interface Nomination {\n  /**\n   *\n   * @type {NominationAward}\n   * @memberof Nomination\n   */\n  award: NominationAward;\n  /**\n   *\n   * @type {string}\n   * @memberof Nomination\n   */\n  title: string;\n}\n/**\n *\n * @export\n * @interface NominationAward\n */\nexport interface NominationAward {\n  /**\n   *\n   * @type {string}\n   * @memberof NominationAward\n   */\n  title: string;\n  /**\n   *\n   * @type {number}\n   * @memberof NominationAward\n   */\n  year: number;\n}\n/**\n *\n * @export\n * @interface PartialTypeClass\n */\nexport interface PartialTypeClass {\n  /**\n   *\n   * @type {Nomination}\n   * @memberof PartialTypeClass\n   */\n  nomination?: Nomination;\n  /**\n   *\n   * @type {boolean}\n   * @memberof PartialTypeClass\n   */\n  winning?: boolean;\n  /**\n   *\n   * @type {number}\n   * @memberof PartialTypeClass\n   */\n  movieId?: number;\n}\n/**\n *\n * @export\n * @interface Person\n */\nexport interface Person {\n  /**\n   *\n   * @type {number}\n   * @memberof Person\n   */\n  id: number;\n  /**\n   *\n   * @type {string}\n   * @memberof Person\n   */\n  name?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Person\n   */\n  enName?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Person\n   */\n  photo?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Person\n   */\n  sex?: string;\n  /**\n   *\n   * @type {number}\n   * @memberof Person\n   */\n  growth?: number;\n  /**\n   *\n   * @type {string}\n   * @memberof Person\n   */\n  birthday?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Person\n   */\n  death?: string;\n  /**\n   *\n   * @type {number}\n   * @memberof Person\n   */\n  age?: number;\n  /**\n   *\n   * @type {Array<BirthPlace>}\n   * @memberof Person\n   */\n  birthPlace?: Array<BirthPlace>;\n  /**\n   *\n   * @type {Array<DeathPlace>}\n   * @memberof Person\n   */\n  deathPlace?: Array<DeathPlace>;\n  /**\n   *\n   * @type {Spouses}\n   * @memberof Person\n   */\n  spouses?: Spouses;\n  /**\n   *\n   * @type {number}\n   * @memberof Person\n   */\n  countAwards?: number;\n  /**\n   *\n   * @type {Array<Profession>}\n   * @memberof Person\n   */\n  profession?: Array<Profession>;\n  /**\n   *\n   * @type {Array<FactInPerson>}\n   * @memberof Person\n   */\n  facts?: Array<FactInPerson>;\n  /**\n   *\n   * @type {Array<MovieInPerson>}\n   * @memberof Person\n   */\n  movies?: Array<MovieInPerson>;\n}\n/**\n *\n * @export\n * @interface PersonAward\n */\nexport interface PersonAward {\n  /**\n   *\n   * @type {Nomination}\n   * @memberof PersonAward\n   */\n  nomination: Nomination;\n  /**\n   *\n   * @type {boolean}\n   * @memberof PersonAward\n   */\n  winning: boolean;\n  /**\n   *\n   * @type {number}\n   * @memberof PersonAward\n   */\n  personId: number;\n  /**\n   *\n   * @type {Movie}\n   * @memberof PersonAward\n   */\n  movie: Movie;\n}\n/**\n *\n * @export\n * @interface PersonAwardDocsResponseDto\n */\nexport interface PersonAwardDocsResponseDto {\n  /**\n   *\n   * @type {Array<PersonAward>}\n   * @memberof PersonAwardDocsResponseDto\n   */\n  docs: Array<PersonAward>;\n  /**\n   * Общее количество результатов\n   * @type {number}\n   * @memberof PersonAwardDocsResponseDto\n   */\n  total: number;\n  /**\n   * Количество результатов на странице\n   * @type {number}\n   * @memberof PersonAwardDocsResponseDto\n   */\n  limit: number;\n  /**\n   * Текущая страница\n   * @type {number}\n   * @memberof PersonAwardDocsResponseDto\n   */\n  page: number;\n  /**\n   * Сколько страниц всего\n   * @type {number}\n   * @memberof PersonAwardDocsResponseDto\n   */\n  pages: number;\n}\n/**\n *\n * @export\n * @interface PersonDocsResponseDto\n */\nexport interface PersonDocsResponseDto {\n  /**\n   *\n   * @type {Array<Person>}\n   * @memberof PersonDocsResponseDto\n   */\n  docs: Array<Person>;\n  /**\n   * Общее количество результатов\n   * @type {number}\n   * @memberof PersonDocsResponseDto\n   */\n  total: number;\n  /**\n   * Количество результатов на странице\n   * @type {number}\n   * @memberof PersonDocsResponseDto\n   */\n  limit: number;\n  /**\n   * Текущая страница\n   * @type {number}\n   * @memberof PersonDocsResponseDto\n   */\n  page: number;\n  /**\n   * Сколько страниц всего\n   * @type {number}\n   * @memberof PersonDocsResponseDto\n   */\n  pages: number;\n}\n/**\n *\n * @export\n * @interface PersonInMovie\n */\nexport interface PersonInMovie {\n  /**\n   * Id персоны с кинопоиска\n   * @type {number}\n   * @memberof PersonInMovie\n   */\n  id?: number;\n  /**\n   *\n   * @type {string}\n   * @memberof PersonInMovie\n   */\n  photo?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof PersonInMovie\n   */\n  name?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof PersonInMovie\n   */\n  enName?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof PersonInMovie\n   */\n  description: string;\n  /**\n   *\n   * @type {string}\n   * @memberof PersonInMovie\n   */\n  profession: string;\n  /**\n   *\n   * @type {string}\n   * @memberof PersonInMovie\n   */\n  enProfession: string;\n}\n/**\n *\n * @export\n * @interface PossibleValueDto\n */\nexport interface PossibleValueDto {\n  /**\n   * Значение по которому нужно делать запрос в базу данных\n   * @type {string}\n   * @memberof PossibleValueDto\n   */\n  name: string;\n  /**\n   * Вспомогательное значение\n   * @type {string}\n   * @memberof PossibleValueDto\n   */\n  slug: string;\n}\n/**\n *\n * @export\n * @interface Premiere\n */\nexport interface Premiere {\n  /**\n   *\n   * @type {string}\n   * @memberof Premiere\n   */\n  country?: string;\n  /**\n   * Для более релевантного поиска, используйте интервал дат 01.02.2022-01.02.2023\n   * @type {Date}\n   * @memberof Premiere\n   */\n  world?: Date;\n  /**\n   * Для более релевантного поиска, используйте интервал дат 01.02.2022-01.02.2023\n   * @type {Date}\n   * @memberof Premiere\n   */\n  russia?: Date;\n  /**\n   *\n   * @type {string}\n   * @memberof Premiere\n   */\n  digital?: string;\n  /**\n   * Для более релевантного поиска, используйте интервал дат 01.02.2022-01.02.2023\n   * @type {Date}\n   * @memberof Premiere\n   */\n  cinema?: Date;\n  /**\n   *\n   * @type {string}\n   * @memberof Premiere\n   */\n  bluray: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Premiere\n   */\n  dvd: string;\n}\n/**\n *\n * @export\n * @interface Profession\n */\nexport interface Profession {\n  /**\n   *\n   * @type {string}\n   * @memberof Profession\n   */\n  value?: string;\n}\n/**\n *\n * @export\n * @interface Rating\n */\nexport interface Rating {\n  /**\n   * Рейтинг кинопоиска\n   * @type {number}\n   * @memberof Rating\n   */\n  kp?: number;\n  /**\n   * Рейтинг IMDB\n   * @type {number}\n   * @memberof Rating\n   */\n  imdb?: number;\n  /**\n   * Рейтинг TMDB\n   * @type {number}\n   * @memberof Rating\n   */\n  tmdb?: number;\n  /**\n   * Рейтинг кинокритиков\n   * @type {number}\n   * @memberof Rating\n   */\n  filmCritics?: number;\n  /**\n   * Рейтинг кинокритиков из РФ\n   * @type {number}\n   * @memberof Rating\n   */\n  russianFilmCritics?: number;\n  /**\n   * Рейтинг основанный на ожиданиях пользователей\n   * @type {number}\n   * @memberof Rating\n   */\n  _await?: number;\n}\n/**\n *\n * @export\n * @interface Review\n */\nexport interface Review {\n  /**\n   *\n   * @type {number}\n   * @memberof Review\n   */\n  id?: number;\n  /**\n   *\n   * @type {number}\n   * @memberof Review\n   */\n  movieId?: number;\n  /**\n   *\n   * @type {string}\n   * @memberof Review\n   */\n  title?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Review\n   */\n  type?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Review\n   */\n  review?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Review\n   */\n  date?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Review\n   */\n  author?: string;\n  /**\n   *\n   * @type {number}\n   * @memberof Review\n   */\n  authorId?: number;\n  /**\n   *\n   * @type {number}\n   * @memberof Review\n   */\n  userRating: number;\n}\n/**\n *\n * @export\n * @interface ReviewDocsResponseDto\n */\nexport interface ReviewDocsResponseDto {\n  /**\n   *\n   * @type {Array<Review>}\n   * @memberof ReviewDocsResponseDto\n   */\n  docs: Array<Review>;\n  /**\n   * Общее количество результатов\n   * @type {number}\n   * @memberof ReviewDocsResponseDto\n   */\n  total: number;\n  /**\n   * Количество результатов на странице\n   * @type {number}\n   * @memberof ReviewDocsResponseDto\n   */\n  limit: number;\n  /**\n   * Текущая страница\n   * @type {number}\n   * @memberof ReviewDocsResponseDto\n   */\n  page: number;\n  /**\n   * Сколько страниц всего\n   * @type {number}\n   * @memberof ReviewDocsResponseDto\n   */\n  pages: number;\n}\n/**\n *\n * @export\n * @interface ReviewInfo\n */\nexport interface ReviewInfo {\n  /**\n   *\n   * @type {number}\n   * @memberof ReviewInfo\n   */\n  count?: number;\n  /**\n   *\n   * @type {number}\n   * @memberof ReviewInfo\n   */\n  positiveCount?: number;\n  /**\n   *\n   * @type {string}\n   * @memberof ReviewInfo\n   */\n  percentage?: string;\n}\n/**\n *\n * @export\n * @interface SearchMovieResponseDto\n */\nexport interface SearchMovieResponseDto {\n  /**\n   *\n   * @type {Array<MeiliMovieEntity>}\n   * @memberof SearchMovieResponseDto\n   */\n  docs: Array<MeiliMovieEntity>;\n  /**\n   * Общее количество результатов\n   * @type {number}\n   * @memberof SearchMovieResponseDto\n   */\n  total: number;\n  /**\n   * Количество результатов на странице\n   * @type {number}\n   * @memberof SearchMovieResponseDto\n   */\n  limit: number;\n  /**\n   * Текущая страница\n   * @type {number}\n   * @memberof SearchMovieResponseDto\n   */\n  page: number;\n  /**\n   * Сколько страниц всего\n   * @type {number}\n   * @memberof SearchMovieResponseDto\n   */\n  pages: number;\n}\n/**\n *\n * @export\n * @interface SearchPersonResponseDto\n */\nexport interface SearchPersonResponseDto {\n  /**\n   *\n   * @type {Array<MeiliPersonEntity>}\n   * @memberof SearchPersonResponseDto\n   */\n  docs: Array<MeiliPersonEntity>;\n  /**\n   * Общее количество результатов\n   * @type {number}\n   * @memberof SearchPersonResponseDto\n   */\n  total: number;\n  /**\n   * Количество результатов на странице\n   * @type {number}\n   * @memberof SearchPersonResponseDto\n   */\n  limit: number;\n  /**\n   * Текущая страница\n   * @type {number}\n   * @memberof SearchPersonResponseDto\n   */\n  page: number;\n  /**\n   * Сколько страниц всего\n   * @type {number}\n   * @memberof SearchPersonResponseDto\n   */\n  pages: number;\n}\n/**\n *\n * @export\n * @interface Season\n */\nexport interface Season {\n  /**\n   *\n   * @type {number}\n   * @memberof Season\n   */\n  movieId?: number;\n  /**\n   *\n   * @type {number}\n   * @memberof Season\n   */\n  number?: number;\n  /**\n   *\n   * @type {number}\n   * @memberof Season\n   */\n  episodesCount?: number;\n  /**\n   *\n   * @type {Array<Episode>}\n   * @memberof Season\n   */\n  episodes?: Array<Episode>;\n}\n/**\n *\n * @export\n * @interface SeasonDocsResponseDto\n */\nexport interface SeasonDocsResponseDto {\n  /**\n   *\n   * @type {Array<Season>}\n   * @memberof SeasonDocsResponseDto\n   */\n  docs: Array<Season>;\n  /**\n   * Общее количество результатов\n   * @type {number}\n   * @memberof SeasonDocsResponseDto\n   */\n  total: number;\n  /**\n   * Количество результатов на странице\n   * @type {number}\n   * @memberof SeasonDocsResponseDto\n   */\n  limit: number;\n  /**\n   * Текущая страница\n   * @type {number}\n   * @memberof SeasonDocsResponseDto\n   */\n  page: number;\n  /**\n   * Сколько страниц всего\n   * @type {number}\n   * @memberof SeasonDocsResponseDto\n   */\n  pages: number;\n}\n/**\n *\n * @export\n * @interface SeasonInfo\n */\nexport interface SeasonInfo {\n  /**\n   *\n   * @type {number}\n   * @memberof SeasonInfo\n   */\n  number?: number;\n  /**\n   *\n   * @type {number}\n   * @memberof SeasonInfo\n   */\n  episodesCount?: number;\n}\n/**\n *\n * @export\n * @interface ShortImage\n */\nexport interface ShortImage {\n  /**\n   * Чтобы найти фильмы с этим полем, используйте: `!null`\n   * @type {string}\n   * @memberof ShortImage\n   */\n  url?: string;\n  /**\n   * Чтобы найти фильмы с этим полем, используйте: `!null`\n   * @type {string}\n   * @memberof ShortImage\n   */\n  previewUrl?: string;\n}\n/**\n *\n * @export\n * @interface Spouses\n */\nexport interface Spouses {\n  /**\n   *\n   * @type {number}\n   * @memberof Spouses\n   */\n  id?: number;\n  /**\n   *\n   * @type {string}\n   * @memberof Spouses\n   */\n  name?: string;\n  /**\n   *\n   * @type {boolean}\n   * @memberof Spouses\n   */\n  divorced?: boolean;\n  /**\n   *\n   * @type {string}\n   * @memberof Spouses\n   */\n  divorcedReason?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Spouses\n   */\n  sex?: string;\n  /**\n   *\n   * @type {number}\n   * @memberof Spouses\n   */\n  children?: number;\n  /**\n   *\n   * @type {string}\n   * @memberof Spouses\n   */\n  relation?: string;\n}\n/**\n *\n * @export\n * @interface Studio\n */\nexport interface Studio {\n  /**\n   *\n   * @type {string}\n   * @memberof Studio\n   */\n  id: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Studio\n   */\n  subType: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Studio\n   */\n  title: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Studio\n   */\n  type?: Studio.TypeEnum;\n  /**\n   *\n   * @type {MovieFromStudio}\n   * @memberof Studio\n   */\n  movies?: MovieFromStudio;\n}\n\n/**\n * @export\n * @namespace Studio\n */\nexport namespace Studio {\n  /**\n   * @export\n   * @enum {string}\n   */\n  export enum TypeEnum {\n    _0 = <any>'Производство',\n    _1 = <any>'Спецэффекты',\n    _2 = <any>'Прокат',\n    _3 = <any>'Студия дубляжа',\n  }\n}\n/**\n *\n * @export\n * @interface StudioDocsResponseDto\n */\nexport interface StudioDocsResponseDto {\n  /**\n   *\n   * @type {Array<Studio>}\n   * @memberof StudioDocsResponseDto\n   */\n  docs: Array<Studio>;\n  /**\n   * Общее количество результатов\n   * @type {number}\n   * @memberof StudioDocsResponseDto\n   */\n  total: number;\n  /**\n   * Количество результатов на странице\n   * @type {number}\n   * @memberof StudioDocsResponseDto\n   */\n  limit: number;\n  /**\n   * Текущая страница\n   * @type {number}\n   * @memberof StudioDocsResponseDto\n   */\n  page: number;\n  /**\n   * Сколько страниц всего\n   * @type {number}\n   * @memberof StudioDocsResponseDto\n   */\n  pages: number;\n}\n/**\n *\n * @export\n * @interface UnauthorizedErrorResponseDto\n */\nexport interface UnauthorizedErrorResponseDto {\n  /**\n   *\n   * @type {number}\n   * @memberof UnauthorizedErrorResponseDto\n   */\n  statusCode: number;\n  /**\n   *\n   * @type {string}\n   * @memberof UnauthorizedErrorResponseDto\n   */\n  message: string;\n  /**\n   *\n   * @type {string}\n   * @memberof UnauthorizedErrorResponseDto\n   */\n  error: string;\n}\n/**\n *\n * @export\n * @interface VendorImage\n */\nexport interface VendorImage {\n  /**\n   *\n   * @type {string}\n   * @memberof VendorImage\n   */\n  name?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof VendorImage\n   */\n  url?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof VendorImage\n   */\n  previewUrl?: string;\n}\n/**\n *\n * @export\n * @interface Video\n */\nexport interface Video {\n  /**\n   * Url трейлера\n   * @type {string}\n   * @memberof Video\n   */\n  url?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Video\n   */\n  name?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Video\n   */\n  site?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Video\n   */\n  type?: string;\n  /**\n   *\n   * @type {number}\n   * @memberof Video\n   */\n  size: number;\n}\n/**\n *\n * @export\n * @interface VideoTypes\n */\nexport interface VideoTypes {\n  /**\n   *\n   * @type {Array<Video>}\n   * @memberof VideoTypes\n   */\n  trailers?: Array<Video>;\n  /**\n   *\n   * @type {Array<Video>}\n   * @memberof VideoTypes\n   */\n  teasers: Array<Video>;\n}\n/**\n *\n * @export\n * @interface Votes\n */\nexport interface Votes {\n  /**\n   *\n   * @type {string}\n   * @memberof Votes\n   */\n  kp?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Votes\n   */\n  imdb?: string;\n  /**\n   *\n   * @type {number}\n   * @memberof Votes\n   */\n  tmdb?: number;\n  /**\n   * Количество голосов кинокритиков\n   * @type {number}\n   * @memberof Votes\n   */\n  filmCritics?: number;\n  /**\n   * Количество голосов кинокритиков из РФ\n   * @type {number}\n   * @memberof Votes\n   */\n  russianFilmCritics?: number;\n  /**\n   * Количество ожидающих выхода\n   * @type {number}\n   * @memberof Votes\n   */\n  _await?: number;\n}\n/**\n *\n * @export\n * @interface Watchability\n */\nexport interface Watchability {\n  /**\n   *\n   * @type {Array<WatchabilityItem>}\n   * @memberof Watchability\n   */\n  items?: Array<WatchabilityItem>;\n}\n/**\n *\n * @export\n * @interface WatchabilityItem\n */\nexport interface WatchabilityItem {\n  /**\n   *\n   * @type {string}\n   * @memberof WatchabilityItem\n   */\n  name?: string;\n  /**\n   *\n   * @type {Logo}\n   * @memberof WatchabilityItem\n   */\n  logo: Logo;\n  /**\n   *\n   * @type {string}\n   * @memberof WatchabilityItem\n   */\n  url: string;\n}\n/**\n *\n * @export\n * @interface YearRange\n */\nexport interface YearRange {\n  /**\n   * Год начала\n   * @type {number}\n   * @memberof YearRange\n   */\n  start?: number;\n  /**\n   * Год окончания\n   * @type {number}\n   * @memberof YearRange\n   */\n  end?: number;\n}\n","export * from './image-service.interface';\nexport * from './movie-service.interface';\nexport * from './person-service.interface';\nexport * from './review-service.interface';\nexport * from './season-service.interface';\nexport * from './studio-service.interface';\nexport * from './keyword-service.interface';\n","import { ClientRequest } from '../../client-request';\nimport { IResponse } from '../response.interface';\nimport { ImageDocsResponseDto } from '../api.interface';\n\nexport interface IImageService {\n  getByFilters(\n    filters: Record<string, string>,\n  ): Promise<IResponse<ImageDocsResponseDto>>;\n}\n","import { MovieFields } from '../../types/movie-fields.type';\nimport {\n  MovieDtoV13,\n  MovieDocsResponseDtoV13,\n  SearchMovieResponseDto,\n  MovieAwardDocsResponseDto,\n  PossibleValueDto,\n} from '../api.interface';\nimport { IPagination } from '../pagination.interface';\nimport { Filter, SearchFilter } from '../query-builder.interface';\nimport { IResponse } from '../response.interface';\n\nexport interface IMovieService {\n  getById(id: number): Promise<IResponse<MovieDtoV13>>;\n  getRandom(): Promise<IResponse<MovieDtoV13>>;\n  getByFilters(\n    filters: Filter<MovieFields>,\n  ): Promise<IResponse<MovieDocsResponseDtoV13>>;\n  getBySearchQuery(\n    filters: SearchFilter,\n  ): Promise<IResponse<SearchMovieResponseDto>>;\n  getAwardsByFilters(\n    filters: Record<string, string>,\n    paginationParams?: IPagination,\n  ): Promise<IResponse<MovieAwardDocsResponseDto>>;\n  getPossibleValuesByField(\n    field: string,\n  ): Promise<IResponse<PossibleValueDto[]>>;\n}\n","import { PersonFields } from '../../types/person-fields.type';\nimport {\n  Person,\n  PersonDocsResponseDto,\n  SearchPersonResponseDto,\n  PersonAwardDocsResponseDto,\n} from '../api.interface';\nimport { IPagination } from '../pagination.interface';\nimport { Filter, SearchFilter } from '../query-builder.interface';\nimport { IResponse } from '../response.interface';\n\nexport interface IPersonService {\n  getById(id: number): Promise<IResponse<Person>>;\n  getByFilters(\n    filters: Filter<PersonFields>,\n  ): Promise<IResponse<PersonDocsResponseDto>>;\n  getBySearchQuery(\n    filters: SearchFilter,\n  ): Promise<IResponse<SearchPersonResponseDto>>;\n  getAwardsByFilters(\n    filters: Record<string, string>,\n    paginationParams?: IPagination,\n  ): Promise<IResponse<PersonAwardDocsResponseDto>>;\n}\n","import { ReviewFields } from '../../types/review-fields.type';\nimport { ReviewDocsResponseDto } from '../api.interface';\nimport { Filter } from '../query-builder.interface';\nimport { IResponse } from '../response.interface';\n\nexport interface IReviewService {\n  getByFilters(\n    filters: Filter<ReviewFields>,\n  ): Promise<IResponse<ReviewDocsResponseDto>>;\n}\n","import { SeasonFields } from '../../types/season-fields.type';\nimport { SeasonDocsResponseDto } from '../api.interface';\nimport { Filter } from '../query-builder.interface';\nimport { IResponse } from '../response.interface';\n\nexport interface ISeasonService {\n  getByFilters(\n    filters: Filter<SeasonFields>,\n  ): Promise<IResponse<SeasonDocsResponseDto>>;\n}\n","import { StudioFields } from '../../types/studio-fields.type';\nimport { Studio, StudioDocsResponseDto } from '../api.interface';\nimport { Filter } from '../query-builder.interface';\nimport { IResponse } from '../response.interface';\n\nexport interface IStudioService {\n  getById(id: number): Promise<IResponse<Studio>>;\n  getByFilters(\n    filters: Filter<StudioFields>,\n  ): Promise<IResponse<StudioDocsResponseDto>>;\n}\n","import { KeywordFields } from '../../types/keyword-fields.type';\nimport { KeywordDocsResponseDto } from '../api.interface';\nimport { Filter } from '../query-builder.interface';\nimport { IResponse } from '../response.interface';\n\nexport interface IKeywordService {\n  getByFilters(\n    filters: Filter<KeywordFields>,\n  ): Promise<IResponse<KeywordDocsResponseDto>>;\n}\n","export * from './image-fields.type';\nexport * from './movie-fields.type';\nexport * from './person-fields.type';\nexport * from './season-fields.type';\nexport * from './studio-fields.type';\nexport * from './keyword-fields.type';\nexport * from './review-fields.type';\n","import { IQueryFields } from '../interfaces/query-fields.interface';\n\nexport interface ImageFields extends IQueryFields {\n  NumberFields: 'movieId' | 'height' | 'width';\n  StringFields: 'type' | 'url' | 'previewUrl' | 'language';\n  DateFields: never;\n  BooleanFields: never;\n  ObjectFields: never;\n}\n","import { IQueryFields } from '../interfaces/query-fields.interface';\n\nexport interface MovieFields extends IQueryFields {\n  StringFields:\n    | 'name'\n    | 'alternativeName'\n    | 'enName'\n    | 'names.name'\n    | 'externalId.kpHD'\n    | 'externalId.imdb'\n    | 'type'\n    | 'tagline'\n    | 'persons.name'\n    | 'persons.enName'\n    | 'persons.description'\n    | 'description'\n    | 'shortDescription'\n    | 'slogan'\n    | 'status'\n    | 'ratingMpaa'\n    | 'logo.url'\n    | 'poster.url'\n    | 'backdrop.url'\n    | 'videos.trailers.url'\n    | 'videos.trailers.site'\n    | 'videos.trailers.type'\n    | 'genres.name'\n    | 'countries.name'\n    | 'persons.photo'\n    | 'budget.value'\n    | 'budget.currency'\n    | 'watchability.items.name'\n    | 'audience.country';\n  DateFields:\n    | 'premiere.world'\n    | 'premiere.russia'\n    | 'premiere.digital'\n    | 'premiere.bluray'\n    | 'premiere.dvd';\n  NumberFields:\n    | 'id'\n    | 'similarMovies.id'\n    | 'sequelsAndPrequels.id'\n    | 'externalId.tmdb'\n    | 'typeNumber'\n    | 'movieLength'\n    | 'seriesLength'\n    | 'totalSeriesLength'\n    | 'year'\n    | 'rating.kp'\n    | 'rating.imdb'\n    | 'rating.tmdb'\n    | 'rating.filmCritics'\n    | 'rating.russianFilmCritics'\n    | 'rating.await'\n    | 'votes.kp'\n    | 'votes.imdb'\n    | 'votes.tmdb'\n    | 'votes.filmCritics'\n    | 'votes.russianFilmCritics'\n    | 'votes.await'\n    | 'ratingAgeLimits'\n    | 'ageRating'\n    | 'persons.id'\n    | 'budget.value'\n    | 'fees.world.value'\n    | 'fees.russia.value'\n    | 'fees.usa.value'\n    | 'image.postersCount'\n    | 'image.backdropsCount'\n    | 'image.framesCount'\n    | 'reviewInfo.count'\n    | 'reviewInfo.positiveCount'\n    | 'seasonsInfo.number'\n    | 'seasonsInfo.episodesCount'\n    | 'videos.trailers.size'\n    | 'videos.teasers.size'\n    | 'audience.count'\n    | 'top10'\n    | 'top250'\n    | 'releaseYears.start'\n    | 'releaseYears.end';\n  BooleanFields: 'ticketsOnSale' | 'isSeries';\n  ObjectFields:\n    | 'externalId'\n    | 'image'\n    | 'reviewInfo'\n    | 'seasonsInfo'\n    | 'videos'\n    | 'audience'\n    | 'releaseYears'\n    | 'budget'\n    | 'fees'\n    | 'watchability'\n    | 'persons'\n    | 'rating'\n    | 'genres'\n    | 'countries'\n    | 'similarMovies'\n    | 'sequelsAndPrequels'\n    | 'poster'\n    | 'backdrop'\n    | 'logo'\n    | 'names'\n    | 'facts';\n}\n","import { IQueryFields } from '../interfaces/query-fields.interface';\n\nexport interface PersonFields extends IQueryFields {\n  StringFields:\n    | 'name'\n    | 'enName'\n    | 'photo'\n    | 'sex'\n    | 'birthPlace.value'\n    | 'deathPlace.value'\n    | 'spouses.name'\n    | 'spouses.divorced'\n    | 'spouses.divorcedReason'\n    | 'spouses.sex'\n    | 'spouses.children'\n    | 'spouses.relation'\n    | 'profession.value'\n    | 'facts.value'\n    | 'movies.name'\n    | 'movies.alternativeName'\n    | 'movies.description'\n    | 'movies.enProfession';\n  DateFields: 'birthday' | 'death';\n  NumberFields:\n    | 'id'\n    | 'movies.id'\n    | 'movies.rating'\n    | 'age'\n    | 'countAwards'\n    | 'growth'\n    | 'spouses.id'\n    | 'spouses.children'\n    | 'spouses.name';\n  BooleanFields: never;\n  ObjectFields:\n    | 'movies'\n    | 'spouses'\n    | 'facts'\n    | 'profession'\n    | 'birthPlace'\n    | 'deathPlace';\n}\n","import { IQueryFields } from '../interfaces/query-fields.interface';\n\nexport interface SeasonFields extends IQueryFields {\n  StringFields: 'episodes.name' | 'episodes.enName' | 'episodes.description';\n  DateFields: 'episodes.date';\n  NumberFields: 'movieId' | 'number' | 'episodesCount' | 'episodes.number';\n  BooleanFields: never;\n  ObjectFields: 'episodes';\n}\n","import { IQueryFields } from '../interfaces/query-fields.interface';\n\nexport interface StudioFields extends IQueryFields {\n  StringFields: 'title' | 'subType' | 'type';\n  NumberFields: 'id' | 'movies.id';\n  DateFields: never;\n  BooleanFields: never;\n  ObjectFields: 'movies';\n}\n","import { IQueryFields } from '../interfaces/query-fields.interface';\n\nexport interface KeywordFields extends IQueryFields {\n  StringFields: 'title';\n  NumberFields: 'id' | 'movies.id';\n  DateFields: never;\n  BooleanFields: never;\n  ObjectFields: 'movies';\n}\n","import { IQueryFields } from '../interfaces/query-fields.interface';\n\nexport interface ReviewFields extends IQueryFields {\n  StringFields: 'title' | 'type' | 'review' | 'author';\n  DateFields: 'date';\n  NumberFields: 'movieId' | 'id' | 'authorId';\n  BooleanFields: never;\n  ObjectFields: never;\n}\n"],"names":[],"version":3,"file":"main.js.map"}